#!/usr/bin/env node

/**
 * ZennÈùûÂÖ¨ÂºèAPIÊ§úË®º„ÉÜ„Çπ„Éà
 * È´òÂìÅË≥™„ÉªÈ´ò„Éñ„ÉÉ„ÇØ„Éû„Éº„ÇØË®ò‰∫ã„ÅÆÂèñÂæó„ÉÜ„Çπ„Éà
 */

const https = require('https');

// „ÉÜ„Çπ„ÉàÁµêÊûúÊ†ºÁ¥ç
const testResults = {
  apis: {},
  totalItems: 0,
  qualityMetrics: {
    highBookmark: [],
    highLike: [],
    recent: [],
    trending: []
  },
  categories: {},
  summary: {}
};

/**
 * HTTPS„É™„ÇØ„Ç®„Çπ„ÉàÈñ¢Êï∞
 */
function fetchJSON(url) {
  return new Promise((resolve, reject) => {
    const options = {
      headers: {
        'User-Agent': 'Mozilla/5.0 (compatible; ZennTrendBot/1.0)',
        'Accept': 'application/json',
        'Content-Type': 'application/json'
      }
    };

    https.get(url, options, (res) => {
      let data = '';
      
      res.on('data', (chunk) => {
        data += chunk;
      });
      
      res.on('end', () => {
        if (res.statusCode === 200) {
          try {
            const jsonData = JSON.parse(data);
            resolve(jsonData);
          } catch (err) {
            reject(new Error(`JSON Parse Error: ${err.message}`));
          }
        } else {
          reject(new Error(`HTTP ${res.statusCode}: ${res.statusMessage}`));
        }
      });
    }).on('error', (err) => {
      reject(err);
    });
  });
}

/**
 * Zenn Publications API - Ë®ò‰∫ã‰∏ÄË¶ßÂèñÂæó
 */
async function getZennPublications() {
  console.log('üìö Zenn Publications API „ÉÜ„Çπ„Éà...');
  
  try {
    const url = 'https://zenn.dev/api/publications/headwaters';
    console.log(`  URL: ${url}`);
    
    const data = await fetchJSON(url);
    console.log(`  ‚úÖ Publications APIÊàêÂäü`);
    console.log(`  „É¨„Çπ„Éù„É≥„ÇπÊßãÈÄ†:`, Object.keys(data));
    
    return data;
    
  } catch (error) {
    console.log(`  ‚ùå Publications APIÂ§±Êïó: ${error.message}`);
    return null;
  }
}

/**
 * Zenn Articles API - Ë®ò‰∫ã‰∏ÄË¶ßÂèñÂæó
 */
async function getZennArticles(params = {}) {
  console.log('üìÑ Zenn Articles API „ÉÜ„Çπ„Éà...');
  
  try {
    // „Éë„É©„É°„Éº„ÇøÊßãÁØâ
    const defaultParams = {
      order: 'liked_count',  // liked_count, latest, trending
      count: 50
    };
    const queryParams = { ...defaultParams, ...params };
    const queryString = Object.entries(queryParams)
      .map(([key, value]) => `${key}=${encodeURIComponent(value)}`)
      .join('&');
    
    const url = `https://zenn.dev/api/articles?${queryString}`;
    console.log(`  URL: ${url}`);
    
    const data = await fetchJSON(url);
    
    if (data && data.articles) {
      console.log(`  ‚úÖ Articles APIÊàêÂäü: ${data.articles.length}‰ª∂ÂèñÂæó`);
      return data.articles;
    } else {
      console.log(`  ‚ö†Ô∏è Articles API: ‰∫àÊúü„Åó„Å™„ÅÑ„É¨„Çπ„Éù„É≥„ÇπÊßãÈÄ†`);
      console.log(`  „É¨„Çπ„Éù„É≥„Çπ:`, Object.keys(data || {}));
      return [];
    }
    
  } catch (error) {
    console.log(`  ‚ùå Articles APIÂ§±Êïó: ${error.message}`);
    return [];
  }
}

/**
 * Zenn Trending API
 */
async function getZennTrending() {
  console.log('üî• Zenn Trending API „ÉÜ„Çπ„Éà...');
  
  try {
    const url = 'https://zenn.dev/api/articles?order=trending&count=30';
    console.log(`  URL: ${url}`);
    
    const data = await fetchJSON(url);
    
    if (data && data.articles) {
      console.log(`  ‚úÖ Trending APIÊàêÂäü: ${data.articles.length}‰ª∂ÂèñÂæó`);
      return data.articles;
    } else {
      console.log(`  ‚ö†Ô∏è Trending API: ‰∫àÊúü„Åó„Å™„ÅÑ„É¨„Çπ„Éù„É≥„ÇπÊßãÈÄ†`);
      return [];
    }
    
  } catch (error) {
    console.log(`  ‚ùå Trending APIÂ§±Êïó: ${error.message}`);
    return [];
  }
}

/**
 * Ë®ò‰∫ãÂìÅË≥™ÂàÜÊûê
 */
function analyzeArticleQuality(articles) {
  console.log('üìä Ë®ò‰∫ãÂìÅË≥™ÂàÜÊûê‰∏≠...');
  
  const analysis = {
    total: articles.length,
    highQuality: [],
    categories: {},
    metrics: {
      avgLikes: 0,
      avgBookmarks: 0,
      avgComments: 0,
      recentCount: 0
    }
  };
  
  let totalLikes = 0;
  let totalBookmarks = 0; 
  let totalComments = 0;
  const oneWeekAgo = new Date(Date.now() - 7 * 24 * 60 * 60 * 1000);
  
  articles.forEach(article => {
    // Âü∫Êú¨„É°„Éà„É™„ÇØ„Çπ
    const likes = article.liked_count || 0;
    const bookmarks = article.bookmarked_count || 0;
    const comments = article.comments_count || 0;
    const publishedAt = new Date(article.published_at);
    
    totalLikes += likes;
    totalBookmarks += bookmarks;
    totalComments += comments;
    
    // ÊúÄËøë„ÅÆË®ò‰∫ã„Ç´„Ç¶„É≥„Éà
    if (publishedAt > oneWeekAgo) {
      analysis.metrics.recentCount++;
    }
    
    // È´òÂìÅË≥™Âà§ÂÆö (likes > 50 „Åæ„Åü„ÅØ bookmarks > 20)
    if (likes > 50 || bookmarks > 20) {
      analysis.highQuality.push({
        title: article.title,
        slug: article.slug,
        likes: likes,
        bookmarks: bookmarks,
        comments: comments,
        publishedAt: article.published_at,
        url: `https://zenn.dev/${article.user?.username}/${article.type}/${article.slug}`,
        topics: article.topics || [],
        qualityScore: likes + (bookmarks * 2) + comments
      });
    }
    
    // „Ç´„ÉÜ„Ç¥„É™ÂàÜÊûê
    if (article.topics) {
      article.topics.forEach(topic => {
        if (!analysis.categories[topic]) {
          analysis.categories[topic] = { count: 0, totalLikes: 0 };
        }
        analysis.categories[topic].count++;
        analysis.categories[topic].totalLikes += likes;
      });
    }
  });
  
  // Âπ≥ÂùáË®àÁÆó
  analysis.metrics.avgLikes = (totalLikes / articles.length).toFixed(1);
  analysis.metrics.avgBookmarks = (totalBookmarks / articles.length).toFixed(1);
  analysis.metrics.avgComments = (totalComments / articles.length).toFixed(1);
  
  // È´òÂìÅË≥™Ë®ò‰∫ã„ÇíÂìÅË≥™„Çπ„Ç≥„Ç¢È†Ü„Å´„ÇΩ„Éº„Éà
  analysis.highQuality.sort((a, b) => b.qualityScore - a.qualityScore);
  
  return analysis;
}

/**
 * „Ç´„ÉÜ„Ç¥„É™„Éª„Éà„Éî„ÉÉ„ÇØÂàÜÊûê
 */
function analyzeTopics(articles) {
  console.log('üè∑Ô∏è „Éà„Éî„ÉÉ„ÇØÂàÜÊûê‰∏≠...');
  
  const topicAnalysis = {};
  
  articles.forEach(article => {
    if (article.topics) {
      article.topics.forEach(topic => {
        if (!topicAnalysis[topic]) {
          topicAnalysis[topic] = {
            count: 0,
            articles: [],
            totalLikes: 0,
            totalBookmarks: 0
          };
        }
        
        topicAnalysis[topic].count++;
        topicAnalysis[topic].totalLikes += article.liked_count || 0;
        topicAnalysis[topic].totalBookmarks += article.bookmarked_count || 0;
        
        if (topicAnalysis[topic].articles.length < 3) {
          topicAnalysis[topic].articles.push({
            title: article.title,
            likes: article.liked_count || 0,
            slug: article.slug
          });
        }
      });
    }
  });
  
  // „Éà„Éî„ÉÉ„ÇØ„Çí‰∫∫Ê∞óÈ†Ü„Å´„ÇΩ„Éº„Éà
  const sortedTopics = Object.entries(topicAnalysis)
    .sort(([,a], [,b]) => b.count - a.count)
    .slice(0, 15); // ‰∏ä‰Ωç15„Éà„Éî„ÉÉ„ÇØ
  
  return sortedTopics;
}

/**
 * „É°„Ç§„É≥ÂÆüË°åÈñ¢Êï∞
 */
async function main() {
  console.log('üöÄ ZennÈùûÂÖ¨ÂºèAPIÊ§úË®º„ÉÜ„Çπ„ÉàÈñãÂßã');
  console.log('='.repeat(60));
  
  const startTime = Date.now();
  
  try {
    // Ë§áÊï∞„ÅÆAPI„Ç®„É≥„Éâ„Éù„Ç§„É≥„Éà„Çí„ÉÜ„Çπ„Éà
    console.log('üì° Ë§áÊï∞API„Ç®„É≥„Éâ„Éù„Ç§„É≥„Éà‰∏¶Âàó„ÉÜ„Çπ„Éà...\n');
    
    const promises = [
      getZennArticles({ order: 'liked_count', count: 50 }),
      getZennArticles({ order: 'latest', count: 30 }),
      getZennTrending(),
      getZennPublications()
    ];
    
    const [likedArticles, latestArticles, trendingArticles, publications] = await Promise.all(promises);
    
    // ÁµêÊûúÁµ±Âêà
    const allArticles = [
      ...likedArticles,
      ...latestArticles,
      ...trendingArticles
    ];
    
    // ÈáçË§áÈô§Âéª
    const uniqueArticles = allArticles.filter((article, index, arr) => 
      arr.findIndex(a => a.slug === article.slug) === index
    );
    
    console.log('\nüìä APIÂèñÂæóÁµêÊûú„Çµ„Éû„É™„Éº');
    console.log('='.repeat(40));
    
    console.log(`È´òË©ï‰æ°Ë®ò‰∫ã (liked_countÈ†Ü): ${likedArticles.length}‰ª∂`);
    console.log(`ÊúÄÊñ∞Ë®ò‰∫ã (latestÈ†Ü): ${latestArticles.length}‰ª∂`);
    console.log(`„Éà„É¨„É≥„ÉâË®ò‰∫ã: ${trendingArticles.length}‰ª∂`);
    console.log(`Publications: ${publications ? 'APIÊàêÂäü' : 'APIÂ§±Êïó'}`);
    console.log(`ÈáçË§áÈô§ÂéªÂæåÁ∑èË®ò‰∫ãÊï∞: ${uniqueArticles.length}‰ª∂`);
    console.log(`Âá¶ÁêÜÊôÇÈñì: ${((Date.now() - startTime) / 1000).toFixed(1)}Áßí`);
    
    // Ë®ò‰∫ãÂìÅË≥™ÂàÜÊûê
    const qualityAnalysis = analyzeArticleQuality(uniqueArticles);
    
    console.log('\nüèÜ Ë®ò‰∫ãÂìÅË≥™ÂàÜÊûêÁµêÊûú');
    console.log('='.repeat(40));
    
    console.log(`Á∑èË®ò‰∫ãÊï∞: ${qualityAnalysis.total}‰ª∂`);
    console.log(`È´òÂìÅË≥™Ë®ò‰∫ã: ${qualityAnalysis.highQuality.length}‰ª∂`);
    console.log(`Âπ≥Âùá„ÅÑ„ÅÑ„Å≠Êï∞: ${qualityAnalysis.metrics.avgLikes}`);
    console.log(`Âπ≥Âùá„Éñ„ÉÉ„ÇØ„Éû„Éº„ÇØÊï∞: ${qualityAnalysis.metrics.avgBookmarks}`);
    console.log(`Âπ≥Âùá„Ç≥„É°„É≥„ÉàÊï∞: ${qualityAnalysis.metrics.avgComments}`);
    console.log(`1ÈÄ±Èñì‰ª•ÂÜÖ„ÅÆË®ò‰∫ã: ${qualityAnalysis.metrics.recentCount}‰ª∂`);
    
    // È´òÂìÅË≥™Ë®ò‰∫ãTOP10Ë°®Á§∫
    console.log('\nüíé È´òÂìÅË≥™Ë®ò‰∫ã TOP10');
    console.log('='.repeat(50));
    
    qualityAnalysis.highQuality.slice(0, 10).forEach((article, index) => {
      console.log(`${index + 1}. ${article.title}`);
      console.log(`   üëç ${article.likes} üìö ${article.bookmarks} üí¨ ${article.comments} („Çπ„Ç≥„Ç¢: ${article.qualityScore})`);
      console.log(`   üè∑Ô∏è ${article.topics.slice(0, 3).join(', ')}`);
      console.log(`   üìÖ ${article.publishedAt.substring(0, 10)}`);
      console.log('');
    });
    
    // „Éà„Éî„ÉÉ„ÇØÂàÜÊûê
    const topicAnalysis = analyzeTopics(uniqueArticles);
    
    console.log('üè∑Ô∏è ‰∫∫Ê∞ó„Éà„Éî„ÉÉ„ÇØ TOP10');
    console.log('='.repeat(40));
    
    topicAnalysis.slice(0, 10).forEach(([topic, data], index) => {
      console.log(`${index + 1}. ${topic}: ${data.count}Ë®ò‰∫ã („ÅÑ„ÅÑ„Å≠Ë®à: ${data.totalLikes})`);
      if (data.articles.length > 0) {
        console.log(`   „Çµ„É≥„Éó„É´: "${data.articles[0].title}" (üëç ${data.articles[0].likes})`);
      }
    });
    
    // „Éà„É¨„É≥„Éâ„ÉØ„Éº„ÉâÊäΩÂá∫
    console.log('\nüî• „Éà„É¨„É≥„Éâ„ÉØ„Éº„ÉâÊäΩÂá∫');
    console.log('='.repeat(40));
    
    const wordCount = {};
    uniqueArticles.forEach(article => {
      const text = article.title + ' ' + (article.topics ? article.topics.join(' ') : '');
      const words = text.split(/[\s„ÄÅ„ÄÇÔºÅÔºü„Éª]/);
      words.forEach(word => {
        word = word.trim();
        if (word.length >= 2 && 
            !word.match(/^[a-zA-Z0-9]+$/) && 
            !['Ë®ò‰∫ã', '„Å´„Å§„ÅÑ„Å¶', '„Å´„Çà„Çã', '„ÅÆ„Åü„ÇÅ'].includes(word)) {
          wordCount[word] = (wordCount[word] || 0) + 1;
        }
      });
    });
    
    const topWords = Object.entries(wordCount)
      .sort(([,a], [,b]) => b - a)
      .slice(0, 15);
    
    topWords.forEach(([word, count], index) => {
      console.log(`${index + 1}. "${word}" (${count}Âõû)`);
    });
    
    // API‰ø°È†ºÊÄßË©ï‰æ°
    console.log('\n‚úÖ API‰ø°È†ºÊÄßË©ï‰æ°');
    console.log('='.repeat(40));
    
    const evaluation = {
      'Ë®ò‰∫ãÂèñÂæóÈáè': uniqueArticles.length >= 100 ? '‚úÖ ÂÑ™ÁßÄ' : uniqueArticles.length >= 50 ? '‚ö†Ô∏è ËâØÂ•Ω' : '‚ùå ‰∏çË∂≥',
      'È´òÂìÅË≥™Ë®ò‰∫ãÂâ≤Âêà': (qualityAnalysis.highQuality.length / qualityAnalysis.total * 100).toFixed(1) + '%',
      'APIÂøúÁ≠îÈÄüÂ∫¶': ((Date.now() - startTime) / 1000) < 5 ? '‚úÖ È´òÈÄü' : '‚ö†Ô∏è ÊôÆÈÄö',
      'ÈÆÆÂ∫¶': qualityAnalysis.metrics.recentCount >= 10 ? '‚úÖ Êñ∞ÈÆÆ' : '‚ö†Ô∏è ÊôÆÈÄö',
      '„Ç´„ÉÜ„Ç¥„É™Â§öÊßòÊÄß': topicAnalysis.length >= 10 ? '‚úÖ Ë±äÂØå' : '‚ö†Ô∏è ÈôêÂÆöÁöÑ'
    };
    
    Object.entries(evaluation).forEach(([criteria, result]) => {
      console.log(`${criteria}: ${result}`);
    });
    
    // ÂÆüË£ÖÊé®Â•®Â∫¶Ë©ï‰æ°
    console.log('\nüéØ Zenn APIÂÆüË£ÖÊé®Â•®Â∫¶');
    console.log('='.repeat(40));
    
    const pros = [
      '‚úÖ Ë±äÂØå„Å™Ë®ò‰∫ãÊï∞ (100‰ª∂‰ª•‰∏äÂèñÂæóÂèØËÉΩ)',
      '‚úÖ È´òÂìÅË≥™Ë®ò‰∫ã„ÅÆÊòéÁ¢∫„Å™ÊåáÊ®ô („ÅÑ„ÅÑ„Å≠„Éª„Éñ„ÉÉ„ÇØ„Éû„Éº„ÇØ)',
      '‚úÖ „Ç´„ÉÜ„Ç¥„É™„Éª„Éà„Éî„ÉÉ„ÇØÊÉÖÂ†±ÂÖÖÂÆü',
      '‚úÖ ÊúÄÊñ∞ÊÄß„Å®„Éà„É¨„É≥„ÉâÊÉÖÂ†±‰∏°ÊñπÂØæÂøú',
      '‚úÖ JSONÂΩ¢Âºè„ÅßÊßãÈÄ†Âåñ„Åï„Çå„Åü„Éá„Éº„Çø'
    ];
    
    const cons = [
      '‚ö†Ô∏è ÈùûÂÖ¨ÂºèAPI„ÅÆ„Åü„ÇÅÂ∞ÜÊù•ÁöÑ„Å™Â§âÊõ¥„É™„Çπ„ÇØ',
      '‚ö†Ô∏è „É¨„Éº„ÉàÂà∂Èôê„ÅÆË©≥Á¥∞„Åå‰∏çÊòé',
      '‚ö†Ô∏è „Ç®„É©„Éº„Éè„É≥„Éâ„É™„É≥„Ç∞„ÅåÂøÖË¶Å'
    ];
    
    console.log('„Äê„É°„É™„ÉÉ„Éà„Äë');
    pros.forEach(pro => console.log(pro));
    
    console.log('\n„ÄêÊ≥®ÊÑèÁÇπ„Äë');
    cons.forEach(con => console.log(con));
    
    // ÊäÄË°ìÁ≥ª„Éà„É¨„É≥„Éâ„Å®„ÅÆÊØîËºÉ
    console.log('\nüîÑ Êó¢Â≠ò„Ç∑„Çπ„ÉÜ„É†„Å®„ÅÆÊØîËºÉ');
    console.log('='.repeat(40));
    
    console.log('GitHub Trending: 102‰ª∂ (ÊäÄË°ì„ÅÆ„Åø)');
    console.log('„ÅØ„Å¶„Å™„Éñ„ÉÉ„ÇØ„Éû„Éº„ÇØ: 53‰ª∂ (ÊäÄË°ì„ÅÆ„Åø)');
    console.log('Hacker News: 10‰ª∂ (Êµ∑Â§ñÊäÄË°ì„ÅÆ„Åø)');
    console.log(`Zenn API: ${uniqueArticles.length}‰ª∂ (ÊäÄË°ì+Â§öÊßò„Å™„Ç´„ÉÜ„Ç¥„É™)`);
    
    if (uniqueArticles.length >= 100) {
      console.log('\nüéâ ÁµêË´ñ: Zenn API„ÅØÊäÄË°ìÁ≥ª„Éà„É¨„É≥„ÉâÂèñÂæó„Å´„Åä„ÅÑ„Å¶ÈùûÂ∏∏„Å´ÊúâÂäπ');
      console.log('üí° Êé®Â•®: Êó¢Â≠ò„Ç∑„Çπ„ÉÜ„É†„Å´Áµ±Âêà„Åó„Å¶ÊäÄË°ì„Éà„É¨„É≥„Éâ„ÅÆË≥™„ÉªÈáè„ÇíÂ§ßÂπÖÊîπÂñÑ');
    } else if (uniqueArticles.length >= 50) {
      console.log('\n‚úÖ ÁµêË´ñ: Zenn API„ÅØÊäÄË°ìÁ≥ª„Éà„É¨„É≥„ÉâÂèñÂæó„Å´„Åä„ÅÑ„Å¶ÊúâÂäπ');
      console.log('üí° Êé®Â•®: Ë£úÂÆåÁöÑ„Å™„ÇΩ„Éº„Çπ„Å®„Åó„Å¶Ê¥ªÁî®');
    } else {
      console.log('\n‚ö†Ô∏è ÁµêË´ñ: Zenn API„ÅØÈôêÂÆöÁöÑ„Å™ÂäπÊûú');
      console.log('üí° Êé®Â•®: ‰ªñ„ÅÆ„ÇΩ„Éº„Çπ„Å®ÁµÑ„ÅøÂêà„Çè„Åõ„Å¶‰ΩøÁî®');
    }
    
    // ÂÆüË£ÖÊé®Â•®‰∫ãÈ†Ö
    console.log('\nüí° ÂÆüË£ÖÊé®Â•®‰∫ãÈ†Ö');
    console.log('='.repeat(40));
    
    console.log('1. liked_countÈ†Ü„Åß„ÅÆÈ´òÂìÅË≥™Ë®ò‰∫ãÂèñÂæó');
    console.log('2. trendingË®ò‰∫ã„Åß„ÅÆÊúÄÊñ∞„Éà„É¨„É≥„ÉâÊääÊè°');
    console.log('3. „Éà„Éî„ÉÉ„ÇØÊÉÖÂ†±„Åß„ÅÆËá™Âãï„Ç´„ÉÜ„Ç¥„É™ÂàÜÈ°û');
    console.log('4. „Éñ„ÉÉ„ÇØ„Éû„Éº„ÇØÊï∞„Åß„ÅÆË®ò‰∫ã‰æ°ÂÄ§Âà§ÂÆö');
    console.log('5. ÈùûÂÖ¨ÂºèAPI„ÅÆ„Åü„ÇÅ„Éï„Ç©„Éº„É´„Éê„ÉÉ„ÇØÊ©üËÉΩÂøÖÈ†à');
    
  } catch (error) {
    console.error('‚ùå „ÉÜ„Çπ„ÉàÂÆüË°å„Ç®„É©„Éº:', error.message);
  }
  
  console.log('\nüîö Zenn APIÊ§úË®º„ÉÜ„Çπ„ÉàÂÆå‰∫Ü');
}

// ÂÆüË°å
main().catch(console.error);