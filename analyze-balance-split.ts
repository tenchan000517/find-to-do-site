// „Éê„É©„É≥„Çπ„ÅÆËâØ„ÅÑÂàÜÂâ≤„ÇíÂàÜÊûê
import { categorizeAndExtractKeywords } from './src/lib/trend-categorizer';
import { getAllTrends } from './src/lib/realtime-trends';

async function analyzeBalanceSplit() {
  console.log('‚öñÔ∏è „Éê„É©„É≥„Çπ„ÅÆËâØ„ÅÑÂàÜÂâ≤Ê°à„ÅÆÂàÜÊûêÈñãÂßã\n');
  
  try {
    const allTrends = await getAllTrends();
    const categorizedTrends = categorizeAndExtractKeywords(allTrends);
    
    const webDevItems = categorizedTrends['„Ç¶„Çß„ÉñÈñãÁô∫'] || [];
    const programmingItems = categorizedTrends['„Éó„É≠„Ç∞„É©„Éü„É≥„Ç∞'] || [];
    
    console.log(`üìä ÂàÜÊûêÂØæË±°:`);
    console.log(`  „Ç¶„Çß„ÉñÈñãÁô∫: ${webDevItems.length}‰ª∂`);
    console.log(`  „Éó„É≠„Ç∞„É©„Éü„É≥„Ç∞: ${programmingItems.length}‰ª∂\n`);
    
    // === „Ç¶„Çß„ÉñÈñãÁô∫47‰ª∂„ÅÆÂàÜÂâ≤ÂàÜÊûê ===
    console.log('üîç „Ç¶„Çß„ÉñÈñãÁô∫47‰ª∂„ÅÆÊäÄË°ìÈ†òÂüüÂàÜÊûê:');
    
    const frontendKeywords = [
      'react', 'vue', 'angular', 'svelte', 'frontend', 'html', 'css', 'javascript', 'typescript',
      'responsive', 'ui', 'ux', 'component', 'jsx', 'tsx', 'browser', 'dom',
      'webpack', 'vite', 'babel', 'sass', 'tailwind', 'bootstrap'
    ];
    
    const backendInfraKeywords = [
      'api', 'backend', 'server', 'database', 'node', 'express', 'nest', 'next', 'nuxt',
      'deployment', 'docker', 'devops', 'microservice', 'mongodb', 'postgresql', 'mysql',
      'redis', 'graphql', 'rest', 'authentication', 'cloud', 'aws', 'vercel'
    ];
    
    const webFrontendItems: typeof webDevItems = [];
    const webBackendItems: typeof webDevItems = [];
    const webAmbiguousItems: typeof webDevItems = [];
    
    webDevItems.forEach(item => {
      const text = `${item.title} ${item.description || ''}`.toLowerCase();
      
      const frontendScore = frontendKeywords.reduce((score, keyword) => 
        score + (text.includes(keyword) ? 1 : 0), 0);
      const backendScore = backendInfraKeywords.reduce((score, keyword) => 
        score + (text.includes(keyword) ? 1 : 0), 0);
      
      if (frontendScore > backendScore && frontendScore > 0) {
        webFrontendItems.push(item);
      } else if (backendScore > frontendScore && backendScore > 0) {
        webBackendItems.push(item);
      } else {
        webAmbiguousItems.push(item);
      }
    });
    
    console.log(`  üé® „Éï„É≠„É≥„Éà„Ç®„É≥„Éâ: ${webFrontendItems.length}‰ª∂`);
    console.log(`  üîß „Éê„ÉÉ„ÇØ„Ç®„É≥„Éâ„Éª„Ç§„É≥„Éï„É©: ${webBackendItems.length}‰ª∂`);
    console.log(`  ‚ùì ÂàÜÈ°ûÂõ∞Èõ£: ${webAmbiguousItems.length}‰ª∂\n`);
    
    // === „Éó„É≠„Ç∞„É©„Éü„É≥„Ç∞26‰ª∂„ÅÆÂàÜÂâ≤ÂàÜÊûê ===
    console.log('üîç „Éó„É≠„Ç∞„É©„Éü„É≥„Ç∞26‰ª∂„ÅÆË®ÄË™ûÁ≥ªÂàÜÊûê:');
    
    const webLangKeywords = [
      'javascript', 'typescript', 'react', 'vue', 'angular', 'node', 'express', 'next',
      'frontend', 'backend', 'web', 'html', 'css'
    ];
    
    const systemLangKeywords = [
      'python', 'rust', 'go', 'java', 'c++', 'c#', 'kotlin', 'swift', 'ruby', 'php',
      'scala', 'dart', 'machine learning', 'data science', 'algorithm', 'system'
    ];
    
    const progWebItems: typeof programmingItems = [];
    const progSystemItems: typeof programmingItems = [];
    const progAmbiguousItems: typeof programmingItems = [];
    
    programmingItems.forEach(item => {
      const text = `${item.title} ${item.description || ''}`.toLowerCase();
      
      const webScore = webLangKeywords.reduce((score, keyword) => 
        score + (text.includes(keyword) ? 1 : 0), 0);
      const systemScore = systemLangKeywords.reduce((score, keyword) => 
        score + (text.includes(keyword) ? 1 : 0), 0);
      
      if (webScore > systemScore && webScore > 0) {
        progWebItems.push(item);
      } else if (systemScore > webScore && systemScore > 0) {
        progSystemItems.push(item);
      } else {
        progAmbiguousItems.push(item);
      }
    });
    
    console.log(`  üåê WebÁ≥ª„Éó„É≠„Ç∞„É©„Éü„É≥„Ç∞: ${progWebItems.length}‰ª∂`);
    console.log(`  ‚öôÔ∏è „Ç∑„Çπ„ÉÜ„É†Á≥ª„Éó„É≠„Ç∞„É©„Éü„É≥„Ç∞: ${progSystemItems.length}‰ª∂`);
    console.log(`  ‚ùì ÂàÜÈ°ûÂõ∞Èõ£: ${progAmbiguousItems.length}‰ª∂\n`);
    
    // === ÂàÜÂâ≤Ê°à„ÅÆË©ï‰æ° ===
    console.log('‚öñÔ∏è ÂàÜÂâ≤Ê°à„ÅÆ„Éê„É©„É≥„ÇπË©ï‰æ°:\n');
    
    // Ê°à1: „Ç¶„Çß„ÉñÈñãÁô∫„ÇíÊäÄË°ìÈ†òÂüü„ÅßÂàÜÂâ≤
    console.log('üìã Ê°à1: „Ç¶„Çß„ÉñÈñãÁô∫„ÇíÊäÄË°ìÈ†òÂüü„ÅßÂàÜÂâ≤');
    console.log(`  ÂúüÊõú: „Éï„É≠„É≥„Éà„Ç®„É≥„ÉâÈñãÁô∫ (${webFrontendItems.length}‰ª∂)`);
    console.log(`  Êó•Êõú: „Éê„ÉÉ„ÇØ„Ç®„É≥„Éâ„Éª„Ç§„É≥„Éï„É© (${webBackendItems.length}‰ª∂)`);
    
    const web1Balance = Math.abs(webFrontendItems.length - webBackendItems.length);
    const web1Min = Math.min(webFrontendItems.length, webBackendItems.length);
    console.log(`  „Éê„É©„É≥„Çπ: Â∑Æ=${web1Balance}‰ª∂, ÊúÄÂ∞ë=${web1Min}‰ª∂ ${web1Min >= 15 ? '‚úÖ' : '‚ö†Ô∏è'}\n`);
    
    // Ê°à2: „Éó„É≠„Ç∞„É©„Éü„É≥„Ç∞„ÇíË®ÄË™ûÁ≥ª„ÅßÂàÜÂâ≤
    console.log('üìã Ê°à2: „Éó„É≠„Ç∞„É©„Éü„É≥„Ç∞„ÇíË®ÄË™ûÁ≥ª„ÅßÂàÜÂâ≤');
    console.log(`  Êú®Êõú: WebÁ≥ª„Éó„É≠„Ç∞„É©„Éü„É≥„Ç∞ (${progWebItems.length}‰ª∂)`);
    console.log(`  ÂúüÊõú: „Ç∑„Çπ„ÉÜ„É†Á≥ª„Éó„É≠„Ç∞„É©„Éü„É≥„Ç∞ (${progSystemItems.length}‰ª∂)`);
    
    const prog1Balance = Math.abs(progWebItems.length - progSystemItems.length);
    const prog1Min = Math.min(progWebItems.length, progSystemItems.length);
    console.log(`  „Éê„É©„É≥„Çπ: Â∑Æ=${prog1Balance}‰ª∂, ÊúÄÂ∞ë=${prog1Min}‰ª∂ ${prog1Min >= 10 ? '‚úÖ' : '‚ö†Ô∏è'}\n`);
    
    // Ê°à3: Ê∑∑ÂêàÂàÜÂâ≤ÔºàÊúÄÈÅ©ÂåñÔºâ
    console.log('üìã Ê°à3: Ê∑∑ÂêàÂàÜÂâ≤ÔºàÊúÄÈÅ©ÂåñÔºâ');
    
    // „Çà„ÇäÂπ≥Á≠â„Å™ÂàÜÂâ≤„ÇíÊé¢„Åô
    const totalWeb = webDevItems.length;
    const totalProg = programmingItems.length;
    
    // „Ç¶„Çß„ÉñÈñ¢ÈÄ£„ÇíÁµ±Âêà„Åó„Å¶ÂàÜÂâ≤
    const allWebRelated = [...webDevItems, ...progWebItems];
    const halfWeb = Math.floor(allWebRelated.length / 2);
    
    console.log(`  ÂúüÊõú: „Ç¶„Çß„Éñ„Éª„Éï„É≠„É≥„Éà„Ç®„É≥„Éâ (Á¥Ñ${halfWeb}‰ª∂)`);
    console.log(`  Êó•Êõú: „Ç¶„Çß„Éñ„Éª„Éê„ÉÉ„ÇØ„Ç®„É≥„Éâ (Á¥Ñ${allWebRelated.length - halfWeb}‰ª∂)`);
    console.log(`  ‚Äª„Éó„É≠„Ç∞„É©„Éü„É≥„Ç∞„ÅØÊú®Êõú„ÅßÁ∂≠ÊåÅ (${progSystemItems.length}‰ª∂)\n`);
    
    // === Êé®Â•®Ê°à„ÅÆÊ±∫ÂÆö ===
    console.log('üéØ Êé®Â•®Ê°à„ÅÆÊ±∫ÂÆö:\n');
    
    let bestOption = '';
    let reasoning = '';
    
    if (web1Min >= 15 && web1Balance <= 10) {
      bestOption = 'Ê°à1: „Ç¶„Çß„ÉñÈñãÁô∫„ÅÆÊäÄË°ìÈ†òÂüüÂàÜÂâ≤';
      reasoning = `‰∏°Êñπ„Å®„ÇÇ15‰ª∂‰ª•‰∏äÁ¢∫‰øù„Åß„Åç„ÄÅÂ∑Æ„Åå${web1Balance}‰ª∂„Å®Â∞è„Åï„ÅÑ`;
    } else if (prog1Min >= 10 && prog1Balance <= 8) {
      bestOption = 'Ê°à2: „Éó„É≠„Ç∞„É©„Éü„É≥„Ç∞„ÅÆË®ÄË™ûÁ≥ªÂàÜÂâ≤';
      reasoning = `‰∏°Êñπ„Å®„ÇÇ10‰ª∂‰ª•‰∏äÁ¢∫‰øù„Åß„Åç„ÄÅÂ∑Æ„Åå${prog1Balance}‰ª∂„Å®Â∞è„Åï„ÅÑ`;
    } else {
      bestOption = 'Ê°à3: Êó¢Â≠ò„Ç´„ÉÜ„Ç¥„É™„ÇíÁ∂≠ÊåÅ„Åó„Å¶Âà•„ÅÆ„Ç¢„Éó„É≠„Éº„ÉÅ';
      reasoning = 'ÂàÜÂâ≤Âæå„ÅÆ„Éê„É©„É≥„Çπ„ÅåÊÇ™„ÅÑ„Åü„ÇÅ„ÄÅÂà•„ÅÆËß£Ê±∫Á≠ñ„ÇíÊ§úË®é';
    }
    
    console.log(`‚úÖ Êé®Â•®: ${bestOption}`);
    console.log(`üìù ÁêÜÁî±: ${reasoning}\n`);
    
    // „Çµ„É≥„Éó„É´Ë®ò‰∫ã„ÅÆË°®Á§∫
    if (bestOption.includes('Ê°à1')) {
      console.log('üìã Êé®Â•®Ê°à„ÅÆ„Çµ„É≥„Éó„É´Ë®ò‰∫ã:');
      console.log('  ÂúüÊõúÔºà„Éï„É≠„É≥„Éà„Ç®„É≥„ÉâÔºâ:');
      webFrontendItems.slice(0, 3).forEach((item, i) => {
        console.log(`    ${i+1}. ${item.title}`);
      });
      console.log('  Êó•ÊõúÔºà„Éê„ÉÉ„ÇØ„Ç®„É≥„Éâ„Éª„Ç§„É≥„Éï„É©Ôºâ:');
      webBackendItems.slice(0, 3).forEach((item, i) => {
        console.log(`    ${i+1}. ${item.title}`);
      });
    } else if (bestOption.includes('Ê°à2')) {
      console.log('üìã Êé®Â•®Ê°à„ÅÆ„Çµ„É≥„Éó„É´Ë®ò‰∫ã:');
      console.log('  Êú®ÊõúÔºàWebÁ≥ª„Éó„É≠„Ç∞„É©„Éü„É≥„Ç∞Ôºâ:');
      progWebItems.slice(0, 3).forEach((item, i) => {
        console.log(`    ${i+1}. ${item.title}`);
      });
      console.log('  ÂúüÊõúÔºà„Ç∑„Çπ„ÉÜ„É†Á≥ª„Éó„É≠„Ç∞„É©„Éü„É≥„Ç∞Ôºâ:');
      progSystemItems.slice(0, 3).forEach((item, i) => {
        console.log(`    ${i+1}. ${item.title}`);
      });
    }
    
  } catch (error) {
    console.error('ÂàÜÊûê„Ç®„É©„Éº:', error);
  }
}

analyzeBalanceSplit();